{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todosFromServer","selectUser","useState","filter","setFilter","selectFilter","setSelectFilter","filteredByTitle","todo","completed","title","includes","className","type","value","onChange","event","target","map","readOnly","onClick","userId","id","API_URL","CurrentUser","selectedUserId","setSelectedUserId","user","setUser","useEffect","n","fetch","then","response","json","result","catch","error","console","log","name","email","phone","App","setTodosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff36a6f3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\n\ninterface Props {\n  todosFromServer: Todo[];\n  selectUser: React.Dispatch<React.SetStateAction<number>>;\n}\n\nexport const TodoList: React.FC<Props>\n  = ({ todosFromServer, selectUser }) => {\n    const [filter, setFilter] = useState<string>('');\n    const [selectFilter, setSelectFilter] = useState('all');\n\n    const filteredByState\n      = todosFromServer.filter(todo => {\n        if (todo.completed === true && selectFilter === 'completed') {\n          return true;\n        }\n\n        if (todo.completed === false && selectFilter === 'active') {\n          return true;\n        }\n\n        if (selectFilter === 'all') {\n          return true;\n        }\n\n        return false;\n      });\n\n    const filteredByTitle\n      = filteredByState.filter(todo => todo.title.includes(filter));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={filter}\n          onChange={event => {\n            setFilter(event.target.value);\n          }}\n        />\n\n        <div className=\"select\">\n          <select\n            value={selectFilter}\n            onChange={event => {\n              setSelectFilter(event.target.value);\n            }}\n          >\n            <option value=\"all\">all</option>\n            <option value=\"active\">active</option>\n            <option value=\"completed\">completed</option>\n          </select>\n\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n        >\n          Randomize\n        </button>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredByTitle.map(todo => (\n              <li\n                className={`TodoList__item TodoList__item--${todo.completed ? 'checked' : 'unchecked'}`}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  };\n","const API_URL = 'https://mate.academy/students-api';\n\nexport function getAllTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(n: number): Promise<User> {\n  return fetch(`${API_URL}/users/${n}`)\n    .then(response => response.json());\n}\n","import React, { useState, useEffect } from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\ninterface Props {\n  selectedUserId: number;\n  setSelectedUserId: React.Dispatch<React.SetStateAction<number>>;\n}\n\nexport const CurrentUser: React.FC<Props>\n  = ({ selectedUserId, setSelectedUserId }) => {\n    const [user, setUser] = useState<User>();\n\n    useEffect(() => {\n      getUser(selectedUserId)\n        .then(result => setUser(result))\n        .catch(error => {\n          // eslint-disable-next-line no-console\n          console.log(error, 'something wrong with syntax');\n        });\n    }, [selectedUserId]);\n\n    return (\n      <div className=\"CurrentUser\">\n        <button\n          className=\"\n              TodoList__user-button\n              TodoList__user-button--red\n              button\n            \"\n          type=\"button\"\n          onClick={() => {\n            setSelectedUserId(0);\n          }}\n        >\n          clear\n        </button>\n\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${selectedUserId}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n        <p className=\"CurrentUser__email\">{user?.email}</p>\n        <p className=\"CurrentUser__phone\">{user?.phone}</p>\n      </div>\n    );\n  };\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api/api';\n\nconst App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n\n  useEffect(() => {\n    getAllTodos()\n      .then(result => setTodosFromServer(result));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todosFromServer={todosFromServer}\n          selectUser={setSelectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              selectedUserId={selectedUserId}\n              setSelectedUserId={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}